# dynamic programming (two parameters of same nature)
"""
Дана прямоугольная доска N × M (N строк и M столбцов). В левом верхнем углу находится шахматный 
конь, которого необходимо переместить в правый нижний угол доски. В данной задаче конь может 
перемещаться на две клетки вниз и одну клетку вправо или на одну клетку вниз и две клетки вправо.

Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый 
нижний угол.

Формат ввода
Входной файл содержит два натуральных числа N и M , .

Формат вывода
В выходной файл выведите единственное число — количество способов добраться конём до правого нижнего
 угла доски.
"""


def main(N, M):
    dp = []
    dp_line = [1] + [0] * (M - 1)
    dp.append(dp_line)
    for i in range(1, N):
        dp_line = [0]
        for j in range(1, M):
            ans = 0
            one_i = i - 1
            one_j = j - 2
            if one_i >= 0 and one_j >= 0:
                ans += dp[one_i][one_j]
            two_i = i - 2
            two_j = j - 1
            if two_i >= 0 and two_j >= 0:
                ans += dp[two_i][two_j]
            dp_line.append(ans)
        dp.append(dp_line)
    print(dp[-1][-1])


if __name__ == "__main__":
    N, M = list(map(int, input().split()))
    main(N, M)
