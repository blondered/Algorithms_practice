# dynamic programming
"""
У одного из студентов в комнате живёт кузнечик, который очень любит прыгать по клетчатой одномерной 
доске. Длина доски — N клеток. К его сожалению, он умеет прыгать только на 1, 2, …, k клеток вперёд.

Однажды студентам стало интересно, сколькими способами кузнечик может допрыгать из первой клетки до 
последней. Помогите им ответить на этот вопрос.

Формат ввода
В первой и единственной строке входного файла записано два целых числа — N и k .

Формат вывода
Выведите одно число — количество способов, которыми кузнечик может допрыгать из первой клетки до 
последней.
"""

def sum_last_k(dp, k):
    ans = 0
    for i in range(1, k + 1):
        ans += dp[0 - i]
    return ans


def main(N, k):

    if N == 1:
        print(1)
        return

    dp = [0]

    for i in range(k):
        ans = sum_last_k(dp, i) + 1
        dp.append(ans)

    if N <= k:
        print(dp[N-1])
    else:
        for i in range(N - k - 1):
            ans = sum_last_k(dp, k)
            dp.append(ans)
        print(dp[-1])


if __name__ == "__main__":
    numbers = list(map(int, input().split()))
    N, k = numbers
    main(N, k)
