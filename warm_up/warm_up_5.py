# math
"""
Хорошестью строки называется количество позиций от 1 до L - 1 (где L — длина строки), таких, 
что следующая буква в строке является следующей по алфавиту. Например, хорошесть строки 
"abcdefghijklmnopqrstuvwxyz" равна 25, а строки "abdc" — только 1.

Чему равна максимально возможная хорошесть строки, которую можно собрать, используя дощечки из 
набора? 

Формат ввода
Первая строка ввода содержит единственное целое число N — количество различных букв в наборе 
(1 ≤ N ≤ 26). 
Обратите внимание: в наборе всегда используются N первых букв латинского алфавита.

Следующие N строк содержат целые положительные числа ci — количество букв соответствующего типа 
(1 ≤ ci ≤ 109). 
Таким образом, первое число означает количество букв "a", второе число задаёт количество букв "b" и 
так далее.

Формат вывода
Выведите единственное целое число — максимально возможную хорошесть строки, которую можно собрать из 
имеющихся дощечек.
"""

from sys import stdin


def main(N, num_letters):
    answer = 0
    for i in range(N - 1):
        pairs = min(num_letters[i], num_letters[i + 1])
        answer += pairs
    print(answer)


if __name__ == "__main__":
    lines = stdin.readlines()
    N = int(lines[0])
    num_letters = list(map(int, lines[1 : N + 1]))
    main(N, num_letters)
